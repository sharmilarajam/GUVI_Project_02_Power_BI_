USE electronics;

#EACH MONTH SOLD PRODUCTS
SELECT 
    `Order year` AS year,
    `Order month` AS month,
    SUM(Quantity) AS total_units_sold
FROM sales
GROUP BY `Order year`, `Order month`
ORDER BY `Order year`, `Order month`;



# PRODUCT SOLD AND REVENUE GENERATED BY EACH
SELECT 
    products.`Product Name`,
    SUM(sales.Quantity) AS total_units_sold,
    SUM(
        sales.Quantity * CAST(REPLACE(REPLACE(products.`Unit Price USD`, ',', ''), '$', '') AS DECIMAL(10,2))
    ) AS total_revenue
FROM sales
JOIN products ON sales.ProductKey = products.ProductKey
GROUP BY products.`Product Name`
ORDER BY total_revenue DESC;




SELECT 
    stores.State,
    stores.Country,
    SUM(sales.Quantity) AS total_units_sold,
    SUM(
        sales.Quantity * CAST(REPLACE(REPLACE(products.`Unit Price USD`, ',', ''), '$', '') AS DECIMAL(10,2))
    ) AS total_revenue
FROM sales
JOIN stores ON sales.StoreKey = stores.StoreKey
JOIN products ON sales.ProductKey = products.ProductKey
GROUP BY stores.State, stores.Country
ORDER BY total_revenue DESC;

#### sales by each store on country
SELECT 
    stores.`StoreKey`,
    stores.`State`,
    stores.`Country`,
    SUM(sales.`Quantity`) AS total_units_sold
FROM sales
JOIN stores ON sales.`StoreKey` = stores.`StoreKey`
GROUP BY stores.`StoreKey`, stores.`State`, stores.`Country`
ORDER BY total_units_sold DESC;


## currency , converted sales value
SELECT 
    sales.Currency,
    SUM(sales.Quantity * 
        CAST(REPLACE(REPLACE(products.`Unit Price USD`, ',', ''), '$', '') AS DECIMAL(10,2))
        * exchange_rate.Exchange
    ) AS converted_sales_value
FROM sales
JOIN products ON sales.ProductKey = products.ProductKey
JOIN exchange_rate 
    ON sales.Currency = exchange_rate.Currency
    AND sales.`Order day` = exchange_rate.day
    AND sales.`Order month` = exchange_rate.month
    AND sales.`Order year` = exchange_rate.year
GROUP BY sales.Currency
ORDER BY converted_sales_value DESC;



